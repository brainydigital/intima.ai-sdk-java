/*
 * Intima.ai - API
 * Bem vindo a documentação da API do [Intima.ai](https://app.intima.ai). Está documentação cobre todas as ações disponíveis dentro do Intima.ai e as disponibilizam como `ENDPOINTS` que podem ser integrados e utilizados por outros serviços ou aplicações, bastando somente possuir o `Token de acesso da API`.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.File;
import java.io.IOException;
/**
 * Documento
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-10-09T14:11:20.784Z[GMT]")
public class Documento {

  @SerializedName("arquivo")
  private File arquivo = null;

  @SerializedName("tipo_documento")
  private Integer tipoDocumento = null;

  @SerializedName("descricao_documento")
  private String descricaoDocumento = null;

  @SerializedName("order")
  private Integer order = null;

  public Documento arquivo(File arquivo) {
    this.arquivo = arquivo;
    return this;
  }

  public Documento() {

  }

  public Documento(File arquivo, Integer tipoDocumento, String descricaoDocumento, Integer order) {
    this.arquivo = arquivo;
    this.tipoDocumento = tipoDocumento;
    this.descricaoDocumento = descricaoDocumento;
    this.order = order;
  }

   /**
   * Get arquivo
   * @return arquivo
  **/
  @Schema(description = "")
  public File getArquivo() {
    return arquivo;
  }

  public void setArquivo(File arquivo) {
    this.arquivo = arquivo;
  }

  public Documento tipoDocumento(Integer tipoDocumento) {
    this.tipoDocumento = tipoDocumento;
    return this;
  }

   /**
   * Get tipoDocumento
   * @return tipoDocumento
  **/
  @Schema(description = "")
  public Integer getTipoDocumento() {
    return tipoDocumento;
  }

  public void setTipoDocumento(Integer tipoDocumento) {
    this.tipoDocumento = tipoDocumento;
  }

  public Documento descricaoDocumento(String descricaoDocumento) {
    this.descricaoDocumento = descricaoDocumento;
    return this;
  }

   /**
   * Get descricaoDocumento
   * @return descricaoDocumento
  **/
  @Schema(description = "")
  public String getDescricaoDocumento() {
    return descricaoDocumento;
  }

  public void setDescricaoDocumento(String descricaoDocumento) {
    this.descricaoDocumento = descricaoDocumento;
  }

  public Documento order(Integer order) {
    this.order = order;
    return this;
  }

   /**
   * Get order
   * @return order
  **/
  @Schema(description = "")
  public Integer getOrder() {
    return order;
  }

  public void setOrder(Integer order) {
    this.order = order;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Documento documento = (Documento) o;
    return Objects.equals(this.arquivo, documento.arquivo) &&
        Objects.equals(this.tipoDocumento, documento.tipoDocumento) &&
        Objects.equals(this.descricaoDocumento, documento.descricaoDocumento) &&
        Objects.equals(this.order, documento.order);
  }

  @Override
  public int hashCode() {
    return Objects.hash(Objects.hashCode(arquivo), tipoDocumento, descricaoDocumento, order);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Documento {\n");
    
    sb.append("    arquivo: ").append(toIndentedString(arquivo)).append("\n");
    sb.append("    tipoDocumento: ").append(toIndentedString(tipoDocumento)).append("\n");
    sb.append("    descricaoDocumento: ").append(toIndentedString(descricaoDocumento)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
