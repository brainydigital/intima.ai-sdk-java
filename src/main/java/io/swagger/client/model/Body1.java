/*
 * Intima.ai - API
 * Bem vindo a documentação da API do [Intima.ai](https://app.intima.ai). Está documentação cobre todas as ações disponíveis dentro do Intima.ai e as disponibilizam como `ENDPOINTS` que podem ser integrados e utilizados por outros serviços ou aplicações, bastando somente possuir o `Token de acesso da API`.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Documento;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Body1
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-10-09T14:11:20.784Z[GMT]")
public class Body1 {
  @SerializedName("numero_processo")
  private String numeroProcesso = null;

  @SerializedName("tipo_documento_mensagem_geral")
  private Integer tipoDocumentoMensagemGeral = null;

  @SerializedName("documentos")
  private List<Documento> documentos = null;

  public Body1 numeroProcesso(String numeroProcesso) {
    this.numeroProcesso = numeroProcesso;
    return this;
  }

   /**
   * Get numeroProcesso
   * @return numeroProcesso
  **/
  @Schema(required = true, description = "")
  public String getNumeroProcesso() {
    return numeroProcesso;
  }

  public void setNumeroProcesso(String numeroProcesso) {
    this.numeroProcesso = numeroProcesso;
  }

  public Body1 tipoDocumentoMensagemGeral(Integer tipoDocumentoMensagemGeral) {
    this.tipoDocumentoMensagemGeral = tipoDocumentoMensagemGeral;
    return this;
  }

   /**
   * Get tipoDocumentoMensagemGeral
   * @return tipoDocumentoMensagemGeral
  **/
  @Schema(required = true, description = "")
  public Integer getTipoDocumentoMensagemGeral() {
    return tipoDocumentoMensagemGeral;
  }

  public void setTipoDocumentoMensagemGeral(Integer tipoDocumentoMensagemGeral) {
    this.tipoDocumentoMensagemGeral = tipoDocumentoMensagemGeral;
  }

  public Body1 documentos(List<Documento> documentos) {
    this.documentos = documentos;
    return this;
  }

  public Body1 addDocumentosItem(Documento documentosItem) {
    if (this.documentos == null) {
      this.documentos = new ArrayList<Documento>();
    }
    this.documentos.add(documentosItem);
    return this;
  }

   /**
   * Get documentos
   * @return documentos
  **/
  @Schema(description = "")
  public List<Documento> getDocumentos() {
    return documentos;
  }

  public void setDocumentos(List<Documento> documentos) {
    this.documentos = documentos;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Body1 body1 = (Body1) o;
    return Objects.equals(this.numeroProcesso, body1.numeroProcesso) &&
        Objects.equals(this.tipoDocumentoMensagemGeral, body1.tipoDocumentoMensagemGeral) &&
        Objects.equals(this.documentos, body1.documentos);
  }

  @Override
  public int hashCode() {
    return Objects.hash(numeroProcesso, tipoDocumentoMensagemGeral, documentos);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Body1 {\n");
    
    sb.append("    numeroProcesso: ").append(toIndentedString(numeroProcesso)).append("\n");
    sb.append("    tipoDocumentoMensagemGeral: ").append(toIndentedString(tipoDocumentoMensagemGeral)).append("\n");
    sb.append("    documentos: ").append(toIndentedString(documentos)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
